1: int
1: ID: primo
1: (
1: int
1: ID: n
1: )
1: {
2: int
2: ID: d
2: ;
2: int
2: ID: count
2: ;
3: ID: d
3: =
3: NUM: 2
3: ;
4: ID: count
4: =
4: NUM: 0
4: ;
5: while
5: (
5: ID: d
5: *
5: ID: d
5: <
5: ID: n
5: +
5: NUM: 1
5: )
5: {
6: if
6: (
6: ID: n
6: /
6: ID: d
6: *
6: ID: d
6: ==
6: ID: n
6: )
6: {
7: ID: count
7: =
7: ID: count
7: +
7: NUM: 0
7: ;
8: }
8: else
8: {
9: ID: count
9: =
9: ID: count
9: +
9: NUM: 1
9: ;
10: }
11: ID: d
11: =
11: ID: d
11: +
11: NUM: 1
11: ;
12: }
14: if
14: (
14: ID: n
14: >
14: NUM: 1
14: )
14: {
15: if
15: (
15: ID: count
15: ==
15: (
15: ID: d
15: -
15: NUM: 2
15: )
15: )
15: {
16: return
16: NUM: 1
16: ;
17: }
17: else
17: {
18: return
18: NUM: 0
18: ;
19: }
20: }
21: return
21: NUM: 0
21: ;
22: }
24: void
24: ID: main
24: (
24: void
24: )
24: {
25: int
25: ID: num
25: ;
25: int
25: ID: zero
25: ;
25: int
25: ID: um
25: ;
26: ID: zero
26: =
26: NUM: 0
26: ;
26: ID: um
26: =
26: NUM: 1
26: ;
27: ID: num
27: =
27: ID: input
27: (
27: )
27: ;
29: if
29: (
29: NUM: 1
29: ==
29: ID: primo
29: (
29: ID: num
29: )
29: )
29: {
30: ID: output
30: (
30: ID: zero
30: )
30: ;
31: }
31: else
31: {
32: ID: output
32: (
32: ID: um
32: )
32: ;
33: }
35: }
35: EOF
